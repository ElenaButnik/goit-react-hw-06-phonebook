{"version":3,"sources":["components/Contacts/ContactList.module.css","components/Filter/Filter.module.css","redux/contacts/actions.js","redux/contacts/selectors.js","components/Forms/Form.js","components/Contacts/ContactList.js","components/Filter/Filter.js","App.js","redux/contacts/reducers.js","redux/store.js","index.js","components/Forms/Form.module.css"],"names":["module","exports","addContact","createAction","deleteContact","filterValue","getContacts","state","contacts","getFilter","filter","Form","useState","userName","setName","userNumber","setNumber","prodIdName","uuidv4","prodIdNumber","dispatch","useDispatch","useSelector","useEffect","window","localStorage","setItem","JSON","stringify","handleChange","event","target","name","value","reset","className","s","form","onSubmit","preventDefault","find","contact","alert","newContacts","number","id","label","htmlFor","input","type","pattern","title","required","onChange","button","ContactList","list","toLowerCase","includes","map","list__item","onClick","Filter","changeFilter","useCallback","e","currentTarget","App","contactList","createReducer","payload","contactFilter","_","persistConfig","key","version","storage","blacklist","contactReducer","combineReducers","persistedContactsReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.1bb5674a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2aTV6\",\"list__item\":\"ContactList_list__item__jLwjO\",\"button\":\"ContactList_button__2GOTV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__wryIk\",\"input\":\"Filter_input__33jDP\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContact = createAction('contact/add');\r\nexport const deleteContact = createAction('contact/delete');\r\nexport const filterValue = createAction('filter/value');\r\n\r\n\r\n//import { v4 as uuidv4 } from 'uuid';\r\n\r\n// export const addContact = contact => ({\r\n//   type: \"contact/add\",\r\n//   payload: contact,\r\n//   // payload: {id: uuidv4(),\r\n//   //    userName, \r\n//   //    userNumber },\r\n// });\r\n\r\n// export const deleteContact = (id) => ({\r\n//   type: \"contact/delete\",\r\n//   payload: { id },\r\n// });\r\n\r\n// export const filterValue = value => ({\r\n//   type: 'filter/value',\r\n//   payload: value,\r\n// })\r\n","export const getContacts = (state) => state.contacts;\r\nexport const getFilter = (state) => state.filter;\r\n\r\n// export const getVisibleContacts = (state) => {\r\n//   const contacts = getContacts(state);\r\n//   const filter = getFilter(state);\r\n\r\n//  const getFilterContacts = (contacts) => {\r\n//     return contacts.filter((contact) =>\r\n//       contact.name.toLowerCase().includes(filter.toLowerCase())\r\n//     );\r\n//   };\r\n//   return getFilterContacts(contacts);\r\n// };\r\n","import { useState, useEffect } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport s from \"../Forms/Form.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addContact } from \"../../redux/contacts/actions\";\r\nimport { getContacts } from \"../../redux/contacts/selectors\";\r\nexport default function Form() {\r\n  const [userName, setName] = useState(\"\");\r\n  const [userNumber, setNumber] = useState(\"\");\r\n  const prodIdName = uuidv4();\r\n  const prodIdNumber = uuidv4();\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getContacts);\r\n\r\n  // const [contacts, setContacts] = useState(() => {\r\n  //   return JSON.parse(localStorage.getItem(\"contacts\")) ?? [];\r\n  // });\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    switch (name) {\r\n      case \"userName\":\r\n        setName(value);\r\n        break;\r\n\r\n      case \"userNumber\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (contacts.find((contact) => contact.name === userName)) {\r\n      alert(`${userName} is already in contacts`);\r\n      reset();\r\n      return;\r\n    }\r\n    const newContacts = {\r\n      name: userName,\r\n      number: userNumber,\r\n      id: uuidv4(),\r\n    };\r\n\r\n    dispatch(addContact(newContacts));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className={s.form} onSubmit={handleSubmit}>\r\n        <label className={s.label} htmlFor={prodIdName}>\r\n          Name\r\n        </label>\r\n        <input\r\n          className={s.input}\r\n          id={prodIdName}\r\n          type=\"text\"\r\n          name=\"userName\"\r\n          value={userName}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n\r\n        <label className={s.label} htmlFor={prodIdNumber}>\r\n          Number\r\n        </label>\r\n        <input\r\n          className={s.input}\r\n          id={prodIdNumber}\r\n          type=\"tel\"\r\n          name=\"userNumber\"\r\n          value={userNumber}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n\r\n        <button className={s.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import s from \"../Contacts/ContactList.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteContact } from \"../../redux/contacts/actions\";\r\nimport { getContacts, getFilter } from \"../../redux/contacts/selectors\";\r\n\r\nexport default function ContactList() {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getContacts);\r\n  const filter = useSelector(getFilter);\r\n\r\n  const getFilterContacts = () => {\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ul className={s.list}>\r\n      {getFilterContacts().map(({ id, name, number }) => (\r\n        <li className={s.list__item} key={id}>\r\n          {name} : {number}\r\n          <button\r\n            className={s.button}\r\n            onClick={() => dispatch(deleteContact(id))}\r\n            type=\"button\"\r\n            id={id}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import s from \"../Filter/Filter.module.css\";\r\nimport { useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { filterValue } from \"../../redux/contacts/actions\";\r\nimport { getFilter } from \"../../redux/contacts/selectors\";\r\n\r\nexport default function Filter() {\r\n  const dispatch = useDispatch();\r\n  const value = useSelector(getFilter);\r\n\r\n  const changeFilter = useCallback(\r\n    (e) => {\r\n      // setFilter(e.currentTarget.value); //сетим локально\r\n      dispatch(filterValue(e.currentTarget.value)); //отправляем значение в редакс\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <label className={s.label}>Find contacts by name</label>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={changeFilter}\r\n      ></input>\r\n    </>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport Form from \"./components/Forms/Form\";\nimport ContactList from \"./components/Contacts/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <Form />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = [\r\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n];\r\n\r\n// const contactList = (state = initialState, action) => {\r\n//   switch (action.type) {\r\n//     case \"contact/add\":\r\n//       return [...state, action.payload];\r\n\r\n//       case \"contact/delete\":\r\n//       return state.filter(contact => contact.id !== action.payload.id);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nexport const contactList = createReducer(initialState, {\r\n  \"contact/add\": (state, { payload }) => [...state, payload],\r\n  \"contact/delete\": (state, { payload }) =>\r\n    state.filter((contact) => contact.id !== payload),\r\n});\r\n\r\nexport const contactFilter = createReducer('', {\r\n  'filter/value': (_, { payload})=> payload,\r\n})\r\n\r\n// const contactFilter = (state = \"\", action) => {\r\n//   return state;\r\n// };\r\n\r\n","// import {  createStore } from \"redux\";\r\n\r\n// import { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\n// export const store = createStore(contactReducer, composeWithDevTools());\r\n\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { contactList, contactFilter } from \"./contacts/reducers\";\r\nimport logger from \"redux-logger\";\r\n\r\nconst persistConfig = {\r\n  key: \"contacts\",\r\n  version: 1,\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst contactReducer = combineReducers({\r\n  contacts: contactList,\r\n  filter: contactFilter,\r\n});\r\n\r\nconst persistedContactsReducer = persistReducer(persistConfig, contactReducer);\r\n\r\nexport const store = configureStore({\r\n  reducer: persistedContactsReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }).concat(logger),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./redux/store\";\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n  <PersistGate persistor = {persistor} loading = {null}>\n   <Provider store={store}>\n      <App />\n    </Provider>\n    </PersistGate>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3kj4K\",\"button\":\"Form_button__ktFyc\",\"label\":\"Form_label__3dtNG\",\"input\":\"Form_input__1hNY5\"};"],"sourceRoot":""}